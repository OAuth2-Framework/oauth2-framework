language: php

php:
    - 7.2
    - 7.3
    - nightly

cache:
    directories:
        - $HOME/.composer/cache
        - vendor

before_install:
    - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{,.disabled} || echo "xdebug not available"

before_script:
    - mkdir -p build/logs
    - mkdir -p build/cov
    - travis_retry composer update

script:
    - ./vendor/bin/phpunit --coverage-php build/cov/coverage-framework.cov
    - ./vendor/bin/phpunit -c webfinger.phpunit.xml --coverage-php build/cov/coverage-webfinger.cov
    - ./vendor/bin/phpunit -c oauth2_security.phpunit.xml --coverage-php build/cov/coverage-oauth2_security.cov
    - ./vendor/bin/phpunit -c oauth2_server.phpunit.xml --coverage-php build/cov/coverage-oauth2_server.cov

after_success:
    - ./vendor/bin/phpcov merge --clover build/logs/clover.xml build/cov
    - ./vendor/bin/php-coveralls --no-interaction

jobs:
    allow_failures:
        - php: nightly

    include:
        - stage: Metrics and quality
          env: COVERAGE
          before_script:
              - mv ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini{.disabled,}
              - if [[ ! $(php -m | grep -si xdebug) ]]; then echo "xdebug required for coverage"; exit 1; fi
          script:
              - ./vendor/bin/phpunit --coverage-php build/cov/coverage-framework.cov
              - ./vendor/bin/phpunit -c webfinger.phpunit.xml --coverage-php build/cov/coverage-webfinger.cov
              - ./vendor/bin/phpunit -c oauth2_security.phpunit.xml --coverage-php build/cov/coverage-oauth2_security.cov
              - ./vendor/bin/phpunit -c oauth2_server.phpunit.xml --coverage-php build/cov/coverage-oauth2_server.cov
          after_script:
              - ./vendor/bin/phpcov merge --clover build/logs/clover.xml build/cov
              - ./vendor/bin/php-coveralls --no-interaction

        - stage: Metrics and quality
          env: STATIC_ANALYSIS
          script:
              - ./vendor/bin/phpstan analyse

        - stage: Metrics and quality
          env: CODING_STANDARDS
          before_script:
              - wget https://cs.symfony.com/download/php-cs-fixer-v2.phar -O php-cs-fixer
              - chmod a+x php-cs-fixer
          script:
              - ./php-cs-fixer fix --dry-run --stop-on-violation --using-cache=no

        - stage: Security Check
          env: SECURITY_CHECK
          before_script:
              - wget -c https://get.sensiolabs.org/security-checker.phar
              - chmod +x security-checker.phar
          script:
              - ./security-checker.phar security:check
